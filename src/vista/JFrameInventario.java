/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import java.awt.HeadlessException;
import java.sql.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.DAOProducto;
import modelo.Producto;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import modelo.DAOCategoria;
import modelo.Categorias;

/**
 *
 * @author gabriel rivas
 */
public class JFrameInventario extends javax.swing.JFrame {

    /**
     * Creates new form JFrameInventario
     */
    public JFrameInventario() throws SQLException {
        initComponents();
        ObtenerProductos();

         this.setSize(1920, 1080); // Establece el tamaño del JFrame (ancho, alto)

          try{
            llenarCombCategoria();
            
        }catch(SQLException ex){
            Logger.getLogger(JFrameVenta.class.getName()).log(Level.
                    SEVERE, null,ex);
        }

    }

     public void llenarCombCategoria() throws SQLException {
   
    List<Categorias> categorias = new DAOCategoria().ObtenerDatos();
    for (int i = 0; i < categorias.size(); i++) {
        
        jComboCategoria.addItem(new Categorias(categorias.
                get(i).getId_categoria(),
                categorias.get(i).getNombreCategoria()));
    }
}

    
    
    
       private void ObtenerProductos()throws SQLException{
    
         List<Producto> proodd = new DAOProducto().ObtenerProducto();
         
         DefaultTableModel modelo = new DefaultTableModel();
         String [] columnas ={"id_producto","id_categoria","nombreProducto","precio","Existencia"};
         
         modelo.setColumnIdentifiers(columnas);
         for(Producto pr: proodd){
             
             String [] renglon = { Integer.toString(pr.getId_producto()),Integer.toString(pr.getId_categoria()),pr.getNombreProducto(),Double.toString(pr.getPrecio()),Integer.toString(pr.getExistencia())};
             modelo.addRow(renglon);
         }jTable1.setModel(modelo);
         
         
    }
    
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jTextField5 = new javax.swing.JTextField();
        jBorrar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jTextField4 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboCategoria = new javax.swing.JComboBox<>();
        jTextField6 = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 150, 607, 450));

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBorrar.setText("borrar");
        jBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBorrarActionPerformed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jBEditar.setText("Editar");
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBAgregar.setText("Añadir");
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jLabel4.setText("Precio");

        jLabel3.setText("Nombre del producto");

        jLabel2.setText("ID_Categoria");

        jLabel1.setText("ID");

        jLabel6.setText("Existencia");

        jComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTextField5, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                                .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jBActualizar)
                                .addGap(18, 18, 18)
                                .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(17, 17, 17)
                                .addComponent(jBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 411, Short.MAX_VALUE)
                                .addComponent(jTextField3, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(186, 186, 186)
                                    .addComponent(jTextField4)))
                            .addComponent(jLabel1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBorrar, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 120, -1, 480));

        jTextField6.setText("jTextField6");
        jPanel1.add(jTextField6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 120, 280, -1));

        jButton5.setText("jButton5");
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 120, 100, -1));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel5.setText("Control de Inventario");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 40, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed
        
          int categoria = 0;
        
        categoria = jComboCategoria.getItemAt(jComboCategoria.getSelectedIndex())
                .getId_categoria();
        
    String nom = jTextField3.getText();
    String precio = jTextField4.getText();
    String existen = jTextField5.getText();

    if (categoria == 0 || nom.equals("") || precio.equals("") || existen.equals("")) {
        JOptionPane.showMessageDialog(rootPane, "Todos los campos son obligatorios");
    } else {
        try {
            
            double precioo = Double.parseDouble(precio);
            int existenn = Integer.parseInt(existen);

            Producto pro = new Producto(categoria, nom, precioo, existenn);
            DAOProducto dao = new DAOProducto();

            if (dao.Insertar(pro) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Registro agregado");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error al agregar el registro");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(rootPane, "Verifique que los campos numéricos sean válidos", "Error de formato", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(rootPane, "Error de base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }
              try {
                  ObtenerProductos();
              } catch (SQLException ex) {
                  Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
              }
    }


    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        try {
        // Obtener el índice de la fila seleccionada
        int fila = jTable1.getSelectedRow();
        
        // Verificar si se seleccionó una fila
        if (fila == -1) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un autor para editar");
        } else {
            // Obtener los datos del seleccionado
           int id = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
            int idcatego = Integer.parseInt(jTable1.getValueAt(fila, 1).toString());
            String nombre = jTable1.getValueAt(fila, 2).toString();
            Double precio = Double.parseDouble( jTable1.getValueAt(fila, 3).toString());
            int existencia = Integer.parseInt(jTable1.getValueAt(fila, 4).toString());

            // Mostrar los datos del autor seleccionado en los campos de texto
            jTextField1.setText(String.valueOf(id));
        //    jTextField2.setText(String.valueOf(idcatego));
            jTextField3.setText(nombre);
            jTextField4.setText(String.valueOf(precio));
            jTextField5.setText(String.valueOf(existencia));
        }
    } catch (Exception ex) {
        Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
    }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed
      
        int categoria = 0;
        
        categoria = jComboCategoria.getItemAt(jComboCategoria.getSelectedIndex())
                .getId_categoria();
        
    String nom = jTextField3.getText();
    String precio = jTextField4.getText();
    String existen = jTextField5.getText();

        
         // OBTIENE EL VALOR DE ID EN CADENA DE TEXTO PARA VER SI ESTA VACIO 
         // LUEGO SE RETORNA Y SE CONVIERTE EN INT
        String idAText = jTextField1.getText();
        if (idAText.isEmpty()) {
        JOptionPane.showMessageDialog(rootPane, "Seleccione un autor para actualizar");
         return;
        }
        
        // convierte en una cadena deentero
        int id = Integer.parseInt(idAText);

         
        if (categoria == 0 || nom.equals("") || precio.equals("") || existen.equals("")) {
        JOptionPane.showMessageDialog(rootPane, "Todos los campos son obligatorios");
    } else {
        try {
            double precioo = Double.parseDouble(precio);
            int existenn = Integer.parseInt(existen);
        
        
       
        
            
            // Crear un objeto Autor con los nuevos datos
            Producto pro = new Producto(id, categoria,nom, precioo,existenn);
            
            // Actualizar el autor en la base de datos
            DAOProducto dao = new DAOProducto();
            int resultado = dao.Actualizar(pro);
            
            if (resultado == 0) {
                JOptionPane.showMessageDialog(rootPane, "Autor actualizado correctamente");
                
                // Actualizar la fila correspondiente al en la tabla
                DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                for (int i = 0; i < model.getRowCount(); i++) {
                    if (Integer.parseInt(model.getValueAt(i, 0).toString()) == id) {
                        model.setValueAt(id, i, 1); // Nombres
                        model.setValueAt(nom, i, 2); // Apellidos
                        model.setValueAt(precioo, i, 3); // Email
                        model.setValueAt(existenn, i, 4); // Cedula
                        break; // Salir del bucle una vez que se haya actualizado la fila
                    }
                }
                
                // Limpiar los campos de texto después de la actualización
                limpiarCampos();
            } else {
                JOptionPane.showMessageDialog(rootPane, "No se pudo actualizar el autor");
            }
        } catch (SQLException ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
       

        // TODO add your handling code here:
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBorrarActionPerformed

        try{
            //OBTIENE EL INDICE DEW LA FILA SELECCIONADA
            int fila = jTable1.getSelectedRow();
            int id=0;
           // Verifica si se seleccionó una fila
        if (fila == -1) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un autor para borrar");
            return;
        } else {
            // Obtiene el ID del autor seleccionado
            id = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
        }
        
        // Instancia la clase DAautor
            DAOProducto dao = new DAOProducto();
            
            // Llama al método Borrar y muestra un mensaje según el resultado
            if (dao.Borrar(id) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Autor borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error al borrar autor");
            }
            
            // Vuelve a cargar los datos en la tabla después de borrar
            ObtenerProductos();
        
    } catch (SQLException ex) {
        Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
    }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBorrarActionPerformed

    private void jComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCategoriaActionPerformed
  public void limpiarCampos(){
    jTextField1.setText("");
   // jTextField2.setText("");
    jTextField3.setText("");
    jTextField4.setText("");
    jTextField5.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameInventario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBorrar;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<Categorias> jComboCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    // End of variables declaration//GEN-END:variables
}
