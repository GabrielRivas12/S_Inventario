/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package vista;

import controlador.Home;
import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.Date;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import modelo.DAOProducto;
import modelo.Producto;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import modelo.DAOCategoria;
import modelo.Categorias;

/**
 *
 * @author gabriel rivas
 */
public class JFrameInventario extends javax.swing.JFrame {

    private ImageIcon imagen;
    private Icon icono;

    /**
     * Creates new form JFrameInventario
     */
    public JFrameInventario() throws SQLException {
        initComponents();
        ObtenerProductos();
        jTextID.setEnabled(false);

        this.mostrarImagen(jLabelBack,
                "src\\Imagenes\\Back.png");

        this.setSize(1920, 1080); // Establece el tamaño del JFrame (ancho, alto)

        try {
            llenarCombCategoria();

        } catch (SQLException ex) {
            Logger.getLogger(JFrameVenta.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    public void llenarCombCategoria() throws SQLException {

        List<Categorias> categorias = new DAOCategoria().ObtenerDatos();
        for (int i = 0; i < categorias.size(); i++) {

            jComboCategoria.addItem(new Categorias(categorias.
                    get(i).getId_categoria(),
                    categorias.get(i).getNombreCategoria()));
        }
    }

    private void ObtenerProductos() throws SQLException {

        List<Producto> proodd = new DAOProducto().ObtenerProducto();

        DefaultTableModel modelo = new DefaultTableModel();
        String[] columnas = {"id_producto", "id_categoria", "Producto", "Precio", "Existencia"};

        modelo.setColumnIdentifiers(columnas);
        for (Producto pr : proodd) {

            String[] renglon = {Integer.toString(pr.getId_producto()), Integer.toString(pr.getId_categoria()), pr.getNombreProducto(), Double.toString(pr.getPrecio()), Integer.toString(pr.getExistencia())};
            modelo.addRow(renglon);
        }
        jTable1.setModel(modelo);

    }

    private void buscarDatosProductos(String dato) throws SQLException {
        List<Producto> productos = new DAOProducto().busquedaProducto(dato);

        DefaultTableModel modelo = new DefaultTableModel();

        String[] columnas = {"id_producto", "id_categoria", "Producto", "Precio", "Existencia"};

        modelo.setColumnIdentifiers(columnas);
        for (Producto pro : productos) {

            String[] renglon = {
                Integer.toString(pro.getId_producto()),
                Integer.toString(pro.getId_categoria()),
                pro.getNombreProducto(),
                Double.toString(pro.getPrecio()),
                Integer.toString(pro.getExistencia())
            };
            modelo.addRow(renglon);
        }
        jTable1.setModel(modelo);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jTextExistencia = new javax.swing.JTextField();
        jBorrar = new javax.swing.JButton();
        jBActualizar = new javax.swing.JButton();
        jBEditar = new javax.swing.JButton();
        jBAgregar = new javax.swing.JButton();
        jTextPrecio = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextNombreProducto = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextID = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jComboCategoria = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabelBack = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextBuscar = new javax.swing.JTextField();
        jBuscar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(211, 217, 254));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(159, 175, 254));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jBorrar.setText("borrar");
        jBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBorrarActionPerformed(evt);
            }
        });

        jBActualizar.setText("Actualizar");
        jBActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBActualizarActionPerformed(evt);
            }
        });

        jBEditar.setText("Editar");
        jBEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBEditarActionPerformed(evt);
            }
        });

        jBAgregar.setText("Añadir");
        jBAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Precio");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Nombre del producto");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Categoria");

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("ID_Producto");

        jLabel6.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel6.setText("Existencia");

        jComboCategoria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboCategoriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTextNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel4))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTextPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel6))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jTextExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 420, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jBAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jBActualizar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(26, 26, 26))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jTextID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jComboCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23)
                .addComponent(jLabel3)
                .addGap(12, 12, 12)
                .addComponent(jTextNombreProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addGap(12, 12, 12)
                .addComponent(jTextPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addComponent(jLabel6)
                .addGap(6, 6, 6)
                .addComponent(jTextExistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBorrar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jBAgregar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 310, 470, 480));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 28)); // NOI18N
        jLabel5.setText("Control de Inventario");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 140, -1, -1));

        jLabelBack.setText("jLabel7");
        jLabelBack.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelBackMouseClicked(evt);
            }
        });
        jPanel1.add(jLabelBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 30, 30));

        jPanel3.setBackground(new java.awt.Color(159, 175, 254));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jBuscar.setText("Buscar");
        jBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBuscarActionPerformed(evt);
            }
        });

        jButton1.setText("Reiniciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBuscar)
                    .addComponent(jButton1)
                    .addComponent(jTextBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 441, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 310, 730, 480));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1920, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarActionPerformed

        int categoria = 0;

        categoria = jComboCategoria.getItemAt(jComboCategoria.getSelectedIndex())
                .getId_categoria();

        String nom = jTextNombreProducto.getText();
        String precio = jTextPrecio.getText();
        String existen = jTextExistencia.getText();

        if (categoria == 0 || nom.equals("") || precio.equals("") || existen.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Todos los campos son obligatorios");
        } else {
            try {

                double precioo = Double.parseDouble(precio);
                int existenn = Integer.parseInt(existen);

                Producto pro = new Producto(categoria, nom, precioo, existenn);
                DAOProducto dao = new DAOProducto();

                if (dao.Insertar(pro) == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Registro agregado");
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Error al agregar el registro");
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(rootPane, "Verifique que los campos numéricos sean válidos", "Error de formato", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(rootPane, "Error de base de datos: " + ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
            try {
                ObtenerProductos();
                limpiarCampos();
            } catch (SQLException ex) {
                Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }


    }//GEN-LAST:event_jBAgregarActionPerformed

    private void jBEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBEditarActionPerformed

        try {
            // Obtener el índice de la fila seleccionada
            int fila = jTable1.getSelectedRow();

            // Verificar si se seleccionó una fila
            if (fila == -1) {
                JOptionPane.showMessageDialog(rootPane, "Seleccione un autor para editar");
            } else {
                // Obtener los datos del seleccionado
                int id = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());

                int idcatego = Integer.parseInt(jTable1.getValueAt(fila, 1).toString());
                String nombre = jTable1.getValueAt(fila, 2).toString();
                Double precio = Double.parseDouble(jTable1.getValueAt(fila, 3).toString());
                int existencia = Integer.parseInt(jTable1.getValueAt(fila, 4).toString());

                // Mostrar los datos del autor seleccionado en los campos de texto
                jTextID.setText(String.valueOf(id));
                jComboCategoria.setSelectedItem(idcatego);
                jTextNombreProducto.setText(nombre);
                jTextPrecio.setText(String.valueOf(precio));
                jTextExistencia.setText(String.valueOf(existencia));

                for (int i = 0; i < jComboCategoria.getItemCount(); i++) {
                    Object item = jComboCategoria.getItemAt(i); // Obtener el ítem del ComboBox

                    // Si el ítem es una clase (por ejemplo, Categoria) y tiene un método para obtener el ID
                    if (item instanceof Categorias) {
                        Categorias categoria = (Categorias) item;
                        if (categoria.getId_categoria() == idcatego) {
                            jComboCategoria.setSelectedIndex(i); // Seleccionar el índice
                            break;
                        }
                    } else if (item.toString().equals(String.valueOf(idcatego))) { // Si el ComboBox solo tiene Strings o valores simples
                        jComboCategoria.setSelectedIndex(i);
                        break;
                    }

                }
            }
        } catch (Exception ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jBEditarActionPerformed

    private void jBActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBActualizarActionPerformed

        int categoria = 0;

        categoria = jComboCategoria.getItemAt(jComboCategoria.getSelectedIndex())
                .getId_categoria();

        String nom = jTextNombreProducto.getText();
        String precio = jTextPrecio.getText();
        String existen = jTextExistencia.getText();

        // OBTIENE EL VALOR DE ID EN CADENA DE TEXTO PARA VER SI ESTA VACIO 
        // LUEGO SE RETORNA Y SE CONVIERTE EN INT
        String id_p = jTextID.getText();
        if (id_p.isEmpty()) {
            JOptionPane.showMessageDialog(rootPane, "Seleccione un producto para actualizar");
            return;
        }

        // convierte en una cadena deentero
        int id_producto = Integer.parseInt(id_p);

        if (categoria == 0 || nom.equals("") || precio.equals("") || existen.equals("")) {
            JOptionPane.showMessageDialog(rootPane, "Todos los campos son obligatorios");
        } else {
            try {
                double precioo = Double.parseDouble(precio);
                int existenn = Integer.parseInt(existen);

                // Crear un objeto Autor con los nuevos datos
                Producto pro = new Producto(id_producto, categoria, nom, precioo, existenn);

                // Actualizar el autor en la base de datos
                DAOProducto dao = new DAOProducto();
                int resultado = dao.Actualizar(pro);

                if (resultado == 0) {
                    JOptionPane.showMessageDialog(rootPane, "Producto actualizado correctamente");

                    // Actualizar la fila correspondiente al en la tabla
                    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
                    for (int i = 0; i < model.getRowCount(); i++) {
                        if (Integer.parseInt(model.getValueAt(i, 0).toString()) == id_producto) {
                            model.setValueAt(categoria, i, 1); // Nombres
                            model.setValueAt(nom, i, 2); // Apellidos
                            model.setValueAt(precioo, i, 3); // Email
                            model.setValueAt(existenn, i, 4); // Cedula
                            break; // Salir del bucle una vez que se haya actualizado la fila
                        }
                    }

                    // Limpiar los campos de texto después de la actualización
                    limpiarCampos();
                } else {
                    JOptionPane.showMessageDialog(rootPane, "No se pudo actualizar el producto");
                }
            } catch (SQLException ex) {
                Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBActualizarActionPerformed

    private void jBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBorrarActionPerformed

        try {
            //OBTIENE EL INDICE DEW LA FILA SELECCIONADA
            int fila = jTable1.getSelectedRow();
            int id = 0;
            // Verifica si se seleccionó una fila
            if (fila == -1) {
                JOptionPane.showMessageDialog(rootPane, "Seleccione un autor para borrar");
                return;
            } else {
                // Obtiene el ID del autor seleccionado
                id = Integer.parseInt(jTable1.getValueAt(fila, 0).toString());
            }

            // Instancia la clase DAautor
            DAOProducto dao = new DAOProducto();

            // Llama al método Borrar y muestra un mensaje según el resultado
            if (dao.Borrar(id) == 0) {
                JOptionPane.showMessageDialog(rootPane, "Autor borrado correctamente");
            } else {
                JOptionPane.showMessageDialog(rootPane, "Error al borrar autor");
            }

            // Vuelve a cargar los datos en la tabla después de borrar
            ObtenerProductos();

        } catch (SQLException ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_jBorrarActionPerformed

    private void jComboCategoriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboCategoriaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboCategoriaActionPerformed

    private void jBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBuscarActionPerformed

        if (jBuscar.getText().contentEquals("")) {
            JOptionPane.showMessageDialog(rootPane, "Ingrese un producto");
            try {
                ObtenerProductos();
            } catch (SQLException ex) {
                Logger.getLogger(JFrameVenta.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else {
            try {
                String datoprod = jTextBuscar.getText();

                buscarDatosProductos(datoprod);

            } catch (SQLException ex) {
                Logger.getLogger(JFrameVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        // TODO add your handling code here:
        // TODO add your handling code here:
    }//GEN-LAST:event_jBuscarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            ObtenerProductos();
            jTextBuscar.setText("");
            // TODO add your handling code here:
        } catch (SQLException ex) {
            Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jLabelBackMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelBackMouseClicked

        Home _home = new Home(); // TODO add your handling code here:
        _home.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabelBackMouseClicked
    public void limpiarCampos() {

        jTextID.setText("");
        jComboCategoria.setSelectedIndex(0);

        jTextNombreProducto.setText("");
        jTextPrecio.setText("");
        jTextExistencia.setText("");
    }

    /**
     * @param args the command line arguments
     */

    private void mostrarImagen(JLabel lbl, String ruta) {
        this.imagen = new ImageIcon(ruta);
        this.icono = new ImageIcon(
                this.imagen.getImage().getScaledInstance(
                        lbl.getWidth(),
                        lbl.getHeight(),
                        Image.SCALE_DEFAULT));
        lbl.setIcon(this.icono);
        this.repaint();

    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrameInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFrameInventario().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(JFrameInventario.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBActualizar;
    private javax.swing.JButton jBAgregar;
    private javax.swing.JButton jBEditar;
    private javax.swing.JButton jBorrar;
    private javax.swing.JButton jBuscar;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Categorias> jComboCategoria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelBack;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextBuscar;
    private javax.swing.JTextField jTextExistencia;
    private javax.swing.JTextField jTextID;
    private javax.swing.JTextField jTextNombreProducto;
    private javax.swing.JTextField jTextPrecio;
    // End of variables declaration//GEN-END:variables
}
